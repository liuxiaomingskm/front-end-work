{"ast":null,"code":"/* global fetch */\nconst APIURL = 'api/todos/';\nexport async function getTodos() {\n  return fetch(APIURL).then(resp => {\n    if (!resp.ok) {\n      if (resp.status >= 400 && resp.status < 500) {\n        return resp.json().then(data => {\n          let err = {\n            errorMessage: data.message\n          };\n          throw err;\n        });\n      } else {\n        let err = {\n          errMessage: \"Please try again later, server is not responding.\"\n        };\n        throw err;\n      }\n    }\n    /*\n    console.log('resp:',resp); //resp是一个一长串的object 含有status code， type, url等等各种key\n    console.log('typeofResp', typeof(resp)); //类型是object\n    console.log(\"resp.json:\", resp.clone().json()); //这里必须是clone resp.json只能出现一次 返回的是一个promise 含有promise Value, promise Status */\n\n\n    return resp.json();\n  });\n}","map":{"version":3,"sources":["/home/ec2-user/environment/fullstack_todo_app/todosfrontend/src/api.js"],"names":["APIURL","getTodos","fetch","then","resp","ok","status","json","data","err","errorMessage","message","errMessage"],"mappings":"AAAA;AACA,MAAMA,MAAM,GAAG,YAAf;AAEA,OAAO,eAAeC,QAAf,GAAyB;AAC5B,SAAOC,KAAK,CAACF,MAAD,CAAL,CACJG,IADI,CACCC,IAAI,IAAG;AACX,QAAI,CAACA,IAAI,CAACC,EAAV,EAAa;AACX,UAAID,IAAI,CAACE,MAAL,IAAe,GAAf,IAAuBF,IAAI,CAACE,MAAL,GAAc,GAAzC,EAA6C;AAC3C,eAAOF,IAAI,CAACG,IAAL,GAAYJ,IAAZ,CAAiBK,IAAI,IAAI;AAC9B,cAAIC,GAAG,GAAG;AAACC,YAAAA,YAAY,EAAEF,IAAI,CAACG;AAApB,WAAV;AACA,gBAAMF,GAAN;AACD,SAHM,CAAP;AAID,OALD,MAKO;AACL,YAAIA,GAAG,GAAG;AAACG,UAAAA,UAAU,EAAE;AAAb,SAAV;AACA,cAAMH,GAAN;AACD;AACF;AACD;;;;;;AAIA,WAAOL,IAAI,CAACG,IAAL,EAAP;AAEH,GAnBM,CAAP;AAoBH","sourcesContent":["/* global fetch */\nconst APIURL = 'api/todos/';\n\nexport async function getTodos(){\n    return fetch(APIURL)\n      .then(resp =>{ \n        if (!resp.ok){\n          if (resp.status >= 400  && resp.status < 500){\n            return resp.json().then(data => {\n              let err = {errorMessage: data.message};\n              throw err;\n            })\n          } else {\n            let err = {errMessage :\"Please try again later, server is not responding.\"}\n            throw err;\n          }\n        }\n        /*\n        console.log('resp:',resp); //resp是一个一长串的object 含有status code， type, url等等各种key\n        console.log('typeofResp', typeof(resp)); //类型是object\n        console.log(\"resp.json:\", resp.clone().json()); //这里必须是clone resp.json只能出现一次 返回的是一个promise 含有promise Value, promise Status */\n        return resp.json();\n      \n    })\n}"]},"metadata":{},"sourceType":"module"}